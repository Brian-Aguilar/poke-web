{"version":3,"sources":["utils/pokemons.js","API.js","components/image/load.js","components/Card/pokemon.js","images/bug.svg","images/dark.svg","images/dragon.svg","images/electric.svg","images/fairy.svg","images/figthing.svg","images/fire.svg","images/flying.svg","images/ghost.svg","images/grass.svg","images/ground.svg","images/ice.svg","images/normal.svg","images/posion.svg","images/psychic.svg","images/rock.svg","images/steel.svg","images/water.svg","components/Badge/index.js","images/pokemon_coin.svg","components/Badge/items.js","components/Card/items.js","components/Input/search.js","components/Lists/index.js","components/Lists/normal.js","components/Lists/items.js","components/Lists/searchItems.js","page/ItemsPage.js"],"names":["imageByPokemon","id","imageByItem","name","nameStat","nameArray","split","length","nameItem","apiGraphQL","data","tipo","queryGraphl","offset","queryListPokemon","querySearchPokemon","queryGetPokemon","queryListItems","querySearchItems","url","method","query","LoadImageStyle","styled","div","LoadImage","srcURL","src","alt","PokemonID","motion","span","CardPokemonStyle","CardPokemon","dato","to","className","types","pokemon_v2_type","layoutId","number_id","map","type","i","nombre","image","imageTypes","bug","dark","dragon","electric","fairy","figthing","fire","flying","ghost","grass","ground","ice","normal","posion","psychic","rock","steel","water","BadgeStyle","Badge","BadgeItemsStyle","BadgeItems","pokeCoin","CardItemStyle","CardItem","cost","SearchStyle","form","SearchInput","base","history","useHistory","onSubmit","e","preventDefault","search","target","children","value","replaceAll","push","reset","placeholder","autoFocus","autoComplete","icono","width","height","ListBase","dispatch","isLoading","ListBaseStyle","LoadingController","Button","onClick","button","memo","ListNormalStyle","LodingContainer","ListNormal","ListItems","usePokemon","itemsState","items","itemsDispatch","itemsAxios","useCallback","axios","next","then","res","status","datosFiltrados","pokemon_v2_item","payload","useEffect","ListSearchItems","item","useParams","searchPokemons","itemAxios","ItemsPage","useLocation","pathname","namePage","undefined"],"mappings":"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","file":"static/js/4.31641927.chunk.js","sourcesContent":["export const imageByPokemon = (id) => {\r\n  if (id < 899) {\r\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\r\n  }\r\n  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\r\n};\r\n\r\nexport const imageByItem = (name) => {\r\n  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${name}.png`;\r\n};\r\n\r\nexport const nameStat = (name) => {\r\n  const nameArray = name.split(\"-\");\r\n  if (nameArray.length === 1) {\r\n    return nameArray[0];\r\n  }\r\n  return `S. ${nameArray[1]}`;\r\n};\r\n\r\nexport const nameItem = (name) => {\r\n  const nameArray = name.split(\"-\");\r\n  return `${nameArray[0]} ${nameArray[1] || \"\"}`;\r\n};\r\n\r\nexport const filterPokemonEvolution = (pokemon = []) => {\r\n  return pokemon.filter((menor, mayor) => {\r\n    if (menor < mayor) {\r\n      return 1;\r\n    }\r\n    if (menor > mayor) {\r\n      return -1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n};\r\n","/**\r\n * Pokemons\r\n */\r\nconst queryListPokemon = (data) => {\r\n  const limitDefault = 10;\r\n  const limit = limitDefault * data;\r\n  const offset = limit - limitDefault;\r\n  const queryGraphl = `query listPokemonPokeAPIquery {\r\n    pokemon_v2_pokemon(limit: ${limitDefault}, offset: ${offset}) {\r\n      name\r\n      id\r\n      pokemon_v2_pokemontypes {\r\n        slot\r\n        pokemon_v2_type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n  return queryGraphl;\r\n};\r\nconst querySearchPokemon = (data) => {\r\n  return `query searchPokemonPokeAPIquery {\r\n    pokemon_v2_pokemon(where: {name: {_iregex: \"${data}\"}}) {\r\n      name\r\n      id\r\n      pokemon_v2_pokemontypes {\r\n        pokemon_v2_type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n};\r\nconst queryGetPokemon = (data) => {\r\n  return `query samplePokeAPIquery {\r\n    pokemon_v2_pokemon(where: {id: {_eq: ${data}}}) {\r\n      name\r\n      pokemon_species_id\r\n      pokemon_v2_pokemontypes {\r\n        slot\r\n        pokemon_v2_type {\r\n          name\r\n        }\r\n      }\r\n      height\r\n      base_experience\r\n      weight\r\n      is_default\r\n      pokemon_v2_pokemonabilities {\r\n        pokemon_v2_ability {\r\n          name\r\n        }\r\n        is_hidden\r\n        slot\r\n      }\r\n      pokemon_v2_pokemonspecy {\r\n        gender_rate\r\n        pokemon_v2_evolutionchain {\r\n          pokemon_v2_pokemonspecies(order_by: {id: asc}) {\r\n            name\r\n            id\r\n            pokemon_v2_pokemons {\r\n              pokemon_v2_pokemontypes {\r\n                pokemon_v2_type {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        pokemon_v2_pokemoncolor {\r\n          name\r\n        }\r\n      }\r\n      pokemon_v2_pokemonstats {\r\n        base_stat\r\n        stat_id\r\n        pokemon_v2_stat {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n};\r\n\r\n/**\r\n * Items\r\n */\r\nconst queryListItems = (data) => {\r\n  const limitDefault = 10;\r\n  const limit = limitDefault * data;\r\n  const offset = limit - limitDefault;\r\n  const queryGraphl = `query samplePokeAPIquery {\r\n    pokemon_v2_item(limit: ${limitDefault}, offset: ${offset}) {\r\n      name\r\n      id\r\n      cost\r\n    }\r\n  }`;\r\n  return queryGraphl;\r\n};\r\nconst querySearchItems = (data) => {\r\n  return `query searchItemsPokeAPIquery {\r\n    pokemon_v2_item(where: {name: {_iregex: \"${data}\"}}) {\r\n      name\r\n      id\r\n      cost\r\n    }\r\n  }`;\r\n};\r\n\r\nconst apiGraphQL = (data, tipo) => {\r\n  let queryGraphl = \"\";\r\n  switch (tipo) {\r\n    case \"LIST_POKEMONS\":\r\n      queryGraphl = queryListPokemon(data);\r\n      break;\r\n    case \"SEARCH_POKEMONS\":\r\n      queryGraphl = querySearchPokemon(data);\r\n      break;\r\n    case \"GET_POKEMON\":\r\n      queryGraphl = queryGetPokemon(data);\r\n      break;\r\n    case \"LIST_ITEMS\":\r\n      queryGraphl = queryListItems(data);\r\n      break;\r\n    case \"SEARCH_ITEMS\":\r\n      queryGraphl = querySearchItems(data);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return {\r\n    url: \"https://beta.pokeapi.co/graphql/v1beta\",\r\n    method: \"post\",\r\n    data: {\r\n      query: queryGraphl,\r\n    },\r\n  };\r\n};\r\nexport default apiGraphQL;\r\n","import styled from \"styled-components\";\r\n\r\nconst LoadImage = ({ srcURL }) => {\r\n  return (\r\n    <LoadImageStyle>\r\n      <img src={srcURL} alt={srcURL} />\r\n    </LoadImageStyle>\r\n  );\r\n};\r\n\r\nconst LoadImageStyle = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  svg {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default LoadImage;\r\n","import { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport PokeballFondo from \"../svg/pokeball_gris\";\r\nimport Badge from \"../Badge\";\r\nimport LoadImage from \"../image/load\";\r\n\r\nconst CardPokemon = ({ dato }) => {\r\n  return (\r\n    <Link to={`/pokedex/pokemon/${dato.id}`}>\r\n      <CardPokemonStyle\r\n        className={`shadow ${dato.types[0].pokemon_v2_type.name}`}\r\n        layoutId={`pokemon-detail-${dato.id}`}\r\n      >\r\n        <PokemonID layoutId={`pokemon-id-${dato.id}`}>\r\n          #{dato.number_id}\r\n        </PokemonID>\r\n        <div className=\"card-pokemon-contenido\">\r\n          <div className=\"header\">\r\n            <h2>{dato.name}</h2>\r\n            <div className=\"header-contenido\">\r\n              {dato.types?.map((type, i) => (\r\n                <Badge\r\n                  key={`badge-${dato.name}-${i}`}\r\n                  nombre={type.pokemon_v2_type.name}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <motion.div\r\n            className=\"pokemon-image\"\r\n            layoutId={`pokemon-img-${dato.id}`}\r\n          >\r\n            <LoadImage srcURL={dato.image} />\r\n          </motion.div>\r\n          <span className=\"pokeball-fondo\">\r\n            <PokeballFondo />\r\n          </span>\r\n        </div>\r\n      </CardPokemonStyle>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst PokemonID = styled(motion.span)`\r\n  position: absolute;\r\n  top: -15px;\r\n  left: 1.25em;\r\n  padding: 5px 15px;\r\n  border-radius: 10px;\r\n  background: var(--g-black), white;\r\n  color: rgb(var(--white));\r\n`;\r\n\r\nconst CardPokemonStyle = styled(motion.div)`\r\n  margin-top: 2em;\r\n  width: 100%;\r\n  border-radius: 1.25em;\r\n  position: relative;\r\n  z-index: initial;\r\n\r\n  .card-pokemon-contenido {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 1.25em 0 1.25em 1.25em;\r\n    overflow: hidden;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    z-index: initial;\r\n\r\n    .header {\r\n      h2 {\r\n        font-size: 1.5rem;\r\n        position: initial;\r\n        text-transform: capitalize;\r\n        z-index: 2;\r\n\r\n        @media screen and (min-width: 420px) {\r\n          font-size: 1.75rem;\r\n        }\r\n      }\r\n\r\n      .header-contenido {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n        gap: 5px;\r\n      }\r\n    }\r\n    .pokemon-image {\r\n      max-width: 150px;\r\n      position: initial;\r\n      z-index: 2;\r\n    }\r\n\r\n    .pokeball-fondo {\r\n      position: absolute;\r\n      bottom: -5em;\r\n      right: -5em;\r\n      opacity: 0.3;\r\n      transform: scale(0.75) rotate(20deg);\r\n      z-index: 1;\r\n    }\r\n  }\r\n\r\n  &.bug,\r\n  &.grass,\r\n  &.steel {\r\n    background: var(--g-green);\r\n  }\r\n  &.dark,\r\n  &.normal {\r\n    background: var(--g-black);\r\n  }\r\n  &.flying,\r\n  &.ghost,\r\n  &.water,\r\n  &.dragon,\r\n  &.ice {\r\n    background: var(--g-blue);\r\n  }\r\n  &.fire,\r\n  &.ground,\r\n  &.rock {\r\n    background: var(--g-orange);\r\n  }\r\n  &.poison,\r\n  &.fairy {\r\n    background: var(--g-purpure);\r\n  }\r\n  &.fighting,\r\n  &.psychic {\r\n    background: var(--g-red);\r\n  }\r\n  &.electric {\r\n    background: var(--g-yellow);\r\n  }\r\n`;\r\n\r\nexport default CardPokemon;\r\n","export default __webpack_public_path__ + \"static/media/bug.23c77aa5.svg\";","export default __webpack_public_path__ + \"static/media/dark.6686c53c.svg\";","export default __webpack_public_path__ + \"static/media/dragon.ac063239.svg\";","export default __webpack_public_path__ + \"static/media/electric.2807ed88.svg\";","export default __webpack_public_path__ + \"static/media/fairy.26637562.svg\";","export default __webpack_public_path__ + \"static/media/figthing.ec7bc6ec.svg\";","export default __webpack_public_path__ + \"static/media/fire.0e93bcd5.svg\";","export default __webpack_public_path__ + \"static/media/flying.bceb01c0.svg\";","export default __webpack_public_path__ + \"static/media/ghost.fa99f5f4.svg\";","export default __webpack_public_path__ + \"static/media/grass.6a0c6164.svg\";","export default __webpack_public_path__ + \"static/media/ground.6b56300e.svg\";","export default __webpack_public_path__ + \"static/media/ice.599b7e1b.svg\";","export default __webpack_public_path__ + \"static/media/normal.041601a7.svg\";","export default __webpack_public_path__ + \"static/media/posion.35d2861a.svg\";","export default __webpack_public_path__ + \"static/media/psychic.52f7d1dc.svg\";","export default __webpack_public_path__ + \"static/media/rock.15b3afc8.svg\";","export default __webpack_public_path__ + \"static/media/steel.eb3b0fc0.svg\";","export default __webpack_public_path__ + \"static/media/water.c2281e0e.svg\";","import styled from \"styled-components\";\r\n\r\nimport bug from \"../../images/bug.svg\";\r\nimport dark from \"../../images/dark.svg\";\r\nimport dragon from \"../../images/dragon.svg\";\r\nimport electric from \"../../images/electric.svg\";\r\nimport fairy from \"../../images/fairy.svg\";\r\nimport figthing from \"../../images/figthing.svg\";\r\nimport fire from \"../../images/fire.svg\";\r\nimport flying from \"../../images/flying.svg\";\r\nimport ghost from \"../../images/ghost.svg\";\r\nimport grass from \"../../images/grass.svg\";\r\nimport ground from \"../../images/ground.svg\";\r\nimport ice from \"../../images/ice.svg\";\r\nimport normal from \"../../images/normal.svg\";\r\nimport posion from \"../../images/posion.svg\";\r\nimport psychic from \"../../images/psychic.svg\";\r\nimport rock from \"../../images/rock.svg\";\r\nimport steel from \"../../images/steel.svg\";\r\nimport water from \"../../images/water.svg\";\r\n\r\nconst imageTypes = (type) => {\r\n  switch (type) {\r\n    case \"bug\":\r\n      return bug;\r\n    case \"dark\":\r\n      return dark;\r\n    case \"dragon\":\r\n      return dragon;\r\n    case \"electric\":\r\n      return electric;\r\n    case \"fairy\":\r\n      return fairy;\r\n    case \"fighting\":\r\n      return figthing;\r\n    case \"fire\":\r\n      return fire;\r\n    case \"flying\":\r\n      return flying;\r\n    case \"ghost\":\r\n      return ghost;\r\n    case \"grass\":\r\n      return grass;\r\n    case \"ground\":\r\n      return ground;\r\n    case \"ice\":\r\n      return ice;\r\n    case \"normal\":\r\n      return normal;\r\n    case \"poison\":\r\n      return posion;\r\n    case \"psychic\":\r\n      return psychic;\r\n    case \"rock\":\r\n      return rock;\r\n    case \"steel\":\r\n      return steel;\r\n    case \"water\":\r\n      return water;\r\n    default:\r\n      return normal;\r\n  }\r\n};\r\n\r\nconst Badge = ({ nombre }) => {\r\n  return (\r\n    <BadgeStyle className={`${nombre}`}>\r\n      <img src={imageTypes(nombre)} alt={`type-${nombre}`} />\r\n      <span>{nombre}</span>\r\n    </BadgeStyle>\r\n  );\r\n};\r\n\r\nconst BadgeStyle = styled.div`\r\n  user-select: none;\r\n  padding: 0.25em 0.5em;\r\n  display: flex;\r\n  align-items: center;\r\n  background: rgba(var(--green), 0.7);\r\n  border-radius: 0.5em;\r\n  img {\r\n    height: 100%;\r\n    max-width: 1.5em;\r\n    margin-right: 0.5em;\r\n  }\r\n  span {\r\n    color: rgb(var(--white));\r\n    text-transform: capitalize;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n\r\n  &.bug,\r\n  &.grass,\r\n  &.steel {\r\n    background: rgba(var(--green), 0.9);\r\n  }\r\n  &.dark,\r\n  &.normal {\r\n    background: rgba(var(--black), 0.7);\r\n  }\r\n  &.flying,\r\n  &.ghost,\r\n  &.water,\r\n  &.dragon,\r\n  &.ice {\r\n    background: rgba(var(--blue), 0.8);\r\n  }\r\n  &.fire,\r\n  &.ground,\r\n  &.rock {\r\n    background: rgba(var(--orange), 0.5);\r\n  }\r\n  &.poison,\r\n  &.fairy {\r\n    background: rgba(var(--purpure), 0.5);\r\n  }\r\n  &.fighting,\r\n  &.psychic {\r\n    background: rgba(var(--red), 0.7);\r\n  }\r\n  &.electric {\r\n    background: rgba(var(--yellow), 0.7);\r\n  }\r\n`;\r\n\r\nexport default Badge;\r\n","export default __webpack_public_path__ + \"static/media/pokemon_coin.e50792b2.svg\";","import styled from \"styled-components\";\r\nimport pokeCoin from \"../../images/pokemon_coin.svg\";\r\n\r\nconst BadgeItems = ({ name }) => {\r\n  return (\r\n    <BadgeItemsStyle>\r\n      <img src={pokeCoin} alt=\"pokecoin\" />\r\n      {name}\r\n    </BadgeItemsStyle>\r\n  );\r\n};\r\n\r\nconst BadgeItemsStyle = styled.span`\r\n  background: rgba(var(--yellow), 0.5);\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  display: flex;\r\n  max-width: 100px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  img {\r\n    max-width: 30px;\r\n  }\r\n`;\r\n\r\nexport default BadgeItems;\r\n","import styled from \"styled-components\";\r\nimport { nameItem } from \"../../utils/pokemons\";\r\nimport BadgeItems from \"../Badge/items\";\r\nimport LoadImage from \"../image/load\";\r\n\r\nconst CardItem = ({ dato }) => {\r\n  return (\r\n    <CardItemStyle>\r\n      <div className=\"item-left\">\r\n        <span>{nameItem(dato.name)}</span>\r\n        <BadgeItems name={dato.cost} />\r\n      </div>\r\n      <div className=\"item-right\">\r\n        <LoadImage srcURL={dato.image} />\r\n      </div>\r\n    </CardItemStyle>\r\n  );\r\n};\r\n\r\nconst CardItemStyle = styled.div`\r\n  background: linear-gradient(\r\n    to left,\r\n    rgba(var(--shadow), 0.25),\r\n    rgb(var(--shadow))\r\n  );\r\n  padding: 1.25em;\r\n  width: 100;\r\n  border-radius: 1.25em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 1.25em;\r\n\r\n  .item-left {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    span:nth-child(1) {\r\n      text-transform: capitalize;\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  .item-right {\r\n    div {\r\n      img {\r\n        transform: scale(2.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: linear-gradient(\r\n      to left,\r\n      rgb(var(--shadow)),\r\n      rgba(var(--shadow), 0.25)\r\n    );\r\n  }\r\n`;\r\n\r\nexport default CardItem;\r\n","import { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Icono from \"../svg\";\r\n\r\nconst SearchInput = ({ base }) => {\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const search = e.target.children.search.value.replaceAll(\" \", \"-\");\r\n    history.push(`/${base}/search/${search}`);\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <SearchStyle onSubmit={handleSubmit}>\r\n      <input\r\n        name=\"search\"\r\n        placeholder={`Buscar ${base === \"pokedex\" ? \"pókemon\" : base}`}\r\n        type=\"text\"\r\n        autoFocus\r\n        autoComplete=\"off\"\r\n      />\r\n      <button type=\"submit\">\r\n        <Icono icono=\"search\" width=\"1.75em\" height=\"1.75em\" />\r\n      </button>\r\n    </SearchStyle>\r\n  );\r\n};\r\n\r\nconst SearchStyle = styled.form`\r\n  background: rgba(var(--shadow), 0.6);\r\n  border-radius: 1.25em;\r\n  padding: 1em 1.25em;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    font-size: 1.5rem;\r\n    margin-right: 5px;\r\n    appearance: none;\r\n    outline: none;\r\n    border: 0;\r\n    background: transparent;\r\n    font-weight: light;\r\n  }\r\n  button {\r\n    appearance: none;\r\n    outline: none;\r\n    border: 0;\r\n    background: transparent;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default SearchInput;\r\n","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CardItem from \"../Card/items\";\r\nimport CardPokemon from \"../Card/pokemon\";\r\nimport LoadPokeball from \"../svg/load\";\r\n\r\nconst ListBase = ({ data, dispatch, type, isLoading }) => {\r\n  const loadMore = () => {\r\n    dispatch();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListBaseStyle>\r\n        {type === \"pokemon\" &&\r\n          data.data.map((dato) => (\r\n            <CardPokemon key={`${dato.name}-${dato.id}`} dato={dato} />\r\n          ))}\r\n\r\n        {type === \"item\" &&\r\n          data.data.map((dato) => (\r\n            <CardItem key={`${dato.name}-${dato.id}`} dato={dato} />\r\n          ))}\r\n      </ListBaseStyle>\r\n\r\n      {isLoading ? (\r\n        <LoadingController>\r\n          <LoadPokeball />\r\n        </LoadingController>\r\n      ) : (\r\n        <Button onClick={loadMore}>Load more</Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ListBaseStyle = styled.div`\r\n  margin: 2em 0;\r\n`;\r\nconst LoadingController = styled.div`\r\n  padding: 1.25em;\r\n  margin-top: 1.25em;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\nconst Button = styled.button`\r\n  margin: 0 auto;\r\n  display: block;\r\n  padding: 0.5em 1.25em;\r\n  font-size: 1.5rem;\r\n  border-radius: 1.25em;\r\n  border: 0;\r\n  background: var(--g-yellow);\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    transform: scale(1.25);\r\n  }\r\n`;\r\n\r\nexport default memo(ListBase);\r\n","import styled from \"styled-components\";\r\nimport CardItem from \"../Card/items\";\r\nimport CardPokemon from \"../Card/pokemon\";\r\nimport LoadPokeball from \"../svg/load\";\r\n\r\nconst ListNormal = ({ data, type, isLoading }) => {\r\n  return (\r\n    <ListNormalStyle>\r\n      {isLoading && (\r\n        <LodingContainer>\r\n          <LoadPokeball />\r\n        </LodingContainer>\r\n      )}\r\n      {data.length !== 0 ? (\r\n        <>\r\n          {type === \"search\" &&\r\n            data.map((dato) => <CardItem key={`sp-${dato.id}`} dato={dato} />)}\r\n          {type === \"pokemon\" &&\r\n            data.map((dato) => (\r\n              <CardPokemon key={`cp-${dato.id}`} dato={dato} />\r\n            ))}\r\n        </>\r\n      ) : (\r\n        <h2>No hay Items</h2>\r\n      )}\r\n    </ListNormalStyle>\r\n  );\r\n};\r\n\r\nconst ListNormalStyle = styled.div`\r\n  margin-top: 2em;\r\n\r\n  h2 {\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst LodingContainer = styled.div`\r\n  padding: 1.25em;\r\n  margin-top: 1.25em;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport default ListNormal;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { usePokemon } from \"../../R\";\r\nimport axios from \"axios\";\r\nimport apiGraphQL from \"../../API\";\r\nimport { imageByItem } from \"../../utils/pokemons\";\r\nimport ListBase from \"./\";\r\n\r\nconst ListItems = () => {\r\n  const {\r\n    itemsState: { items, isLoading },\r\n    itemsDispatch,\r\n  } = usePokemon();\r\n\r\n  const itemsAxios = useCallback(() => {\r\n    itemsDispatch({ type: \"ITEMS_LOADING\" });\r\n    axios(apiGraphQL(items.next, \"LIST_ITEMS\")).then((res) => {\r\n      const {\r\n        status,\r\n        data: { data },\r\n      } = res;\r\n\r\n      if (status === 200) {\r\n        const datosFiltrados = data.pokemon_v2_item.map((dato) => ({\r\n          ...dato,\r\n          image: imageByItem(dato.name),\r\n        }));\r\n\r\n        itemsDispatch({\r\n          type: \"ITEMS\",\r\n          payload: {\r\n            data: datosFiltrados,\r\n            next: items.next + 1,\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }, [items.next, itemsDispatch]);\r\n\r\n  useEffect(() => {\r\n    itemsAxios();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <>\r\n      <ListBase\r\n        data={items}\r\n        dispatch={itemsAxios}\r\n        type=\"item\"\r\n        isLoading={isLoading}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItems;\r\n","import axios from \"axios\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport apiGraphQL from \"../../API\";\r\nimport { usePokemon } from \"../../R\";\r\nimport { imageByItem } from \"../../utils/pokemons\";\r\nimport ListNormal from \"./normal\";\r\n\r\nconst ListSearchItems = () => {\r\n  const { item } = useParams();\r\n  const {\r\n    itemsState: { searchPokemons, isLoading },\r\n    itemsDispatch,\r\n  } = usePokemon();\r\n  const itemAxios = useCallback(() => {\r\n    itemsDispatch({ type: \"ITEMS_LOADING\" });\r\n    axios(apiGraphQL(item, \"SEARCH_ITEMS\")).then((res) => {\r\n      const {\r\n        status,\r\n        data: { data },\r\n      } = res;\r\n\r\n      if (status === 200) {\r\n        const datosFiltrados = data.pokemon_v2_item.map((dato) => ({\r\n          ...dato,\r\n          image: imageByItem(dato.name),\r\n        }));\r\n        itemsDispatch({ type: \"SEARCH_ITEMS\", payload: datosFiltrados });\r\n      }\r\n    });\r\n  }, [item, itemsDispatch]);\r\n\r\n  useEffect(() => {\r\n    itemAxios();\r\n  }, [itemAxios]);\r\n  return (\r\n    <ListNormal data={searchPokemons} type=\"search\" isLoading={isLoading} />\r\n  );\r\n};\r\n\r\nexport default ListSearchItems;\r\n","import { useLocation } from \"react-router\";\r\nimport { BasePageStyle } from \"../components/GlobalStyle\";\r\nimport SearchInput from \"../components/Input/search\";\r\nimport ListItems from \"../components/Lists/items\";\r\nimport ListSearchItems from \"../components/Lists/searchItems\";\r\n\r\nconst ItemsPage = () => {\r\n  const location = useLocation();\r\n  const [, , namePage] = location.pathname.split(\"/\");\r\n\r\n  return (\r\n    <BasePageStyle>\r\n      <h1>{namePage === undefined ? \"Items\" : namePage}</h1>\r\n      <SearchInput base=\"items\" />\r\n      {namePage === \"search\" && <ListSearchItems />}\r\n      {namePage === undefined && <ListItems />}\r\n    </BasePageStyle>\r\n  );\r\n};\r\n\r\nexport default ItemsPage;\r\n"],"sourceRoot":""}